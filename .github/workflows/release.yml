name: Release

on:
  # push:
    # branches:
    #   - master  # Change this to your main branch
  workflow_dispatch:  # This line allows manual triggering

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract version
        id: extract_version
        run: |
          version=$(grep '^version =' Cargo.toml | sed -E 's/version = "(.*)"/\1/')
          echo "::set-output name=version::$version"

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal

      - name: Install dependencies on macOS
        if: matrix.os == 'macos-latest'
        run: sudo softwareupdate -i -a

      - name: Install dependencies on Windows
        if: matrix.os == 'windows-latest'
        run: choco install llvm

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}-binary
          path: target/${{ matrix.target }}/release/public-bookmarks

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Linux binaries
        uses: actions/download-artifact@v2
        with:
          name: x86_64-unknown-linux-gnu-binary
          path: binaries/linux/public-bookmarks

      - name: Download macOS binaries
        uses: actions/download-artifact@v2
        with:
          name: x86_64-apple-darwin-binary
          path: binaries/mac/public-bookmarks

      - name: Download Windows binaries
        uses: actions/download-artifact@v2
        with:
          name: x86_64-pc-windows-gnu-binary
          path: binaries/windows/public-bookmarks

      - name: Create Git Tag
        id: create_tag
        run: |
          version=${{ steps.extract_version.outputs.version }}
          git config --global user.email "josh@hacked.codes"
          git config --global user.name "Josh Terrill"
          git tag -a v$version -m "Tagging version $version for release"
          git push origin v$version

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          release_name: Release v${{ steps.extract_version.outputs.version }}
          draft: true
          prerelease: false

      - name: Upload Release Asset Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: binaries/linux/public-bookmarks
          asset_name: public-bookmarks-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: binaries/mac/public-bookmarks
          asset_name: public-bookmarks-mac
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: binaries/windows/public-bookmarks
          asset_name: public-bookmarks-windows
          asset_content_type: application/octet-stream
